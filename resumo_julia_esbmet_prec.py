# -*- coding: utf-8 -*-
"""casos_dive_pivot_total.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yUVc-aHdJllwnjBhJJUkP29ExEVjzYxj

# Montando Drive


from google.colab import drive
drive.mount('/content/drive')
!ls

# Importando Bibliotecas"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
!pip install cartopy
import cartopy.crs as ccrs

"""# Abrindo Arquivos"""

url = "https://raw.githubusercontent.com/matheusf30/dados_dengue/refs/heads/main/prec_semana_ate_2024.csv" #raw
casos = pd.read_csv(url)
print(casos.head())
casos.head() # Diferença na apresentação gráfica
# Everton - TMIN
# Bia - TMED
# Júlia - TMAX
# Domênica - PREC (GFS)
# Murilo - PREC (MERGE) / CASOS
# Carol - FOCOS

"""# Analisando Variáveis"""

print(casos.info())
print("="*50)
print(casos.dtypes)
print("="*50)
print(casos.describe())

"""# Pré-processamento"""

casos["Semana"] = pd.to_datetime(casos["Semana"])
print(casos.dtypes)

municipios = casos.columns[1:]
print(municipios)

for municipio in municipios:
  max = casos[municipio].max()
  min = casos[municipio].min()
  soma = casos[municipio].sum()
  print("=" * 50)
  print(f"Analisando o município: {municipio}")
  print("~" * 50)
  print(f"O valor máximo é: {max}")
  print("~" * 50)
  print(f"O valor mínimo é: {min}")
  print("~" * 50)
  print(f"A soma da série histórica é: {soma}")

max = {}
min = {}
soma = {}
for municipio in municipios:
  max[municipio] = casos[municipio].max()
  min[municipio] = casos[municipio].min()
  soma[municipio] = casos[municipio].sum()
print(max)
print(min)
print(soma)

df_max = pd.DataFrame(list(max.items()), columns=['Município', 'Máximo'])
df_min = pd.DataFrame(list(min.items()), columns=['Município', 'Mínimo'])
df_soma = pd.DataFrame(list(soma.items()), columns=['Município', 'Soma'])
print(df_max)
print(df_min)
print(df_soma)

df_max = df_max.sort_values(by = "Máximo", ascending = False)
df_min = df_min.sort_values(by = "Mínimo", ascending = True)
df_soma = df_soma.sort_values(by = "Soma", ascending = False)
df_soma_asc = df_soma.sort_values(by = "Soma", ascending = True)
print(df_max)
print(df_min)
print(df_soma)
print(df_soma_asc)

"""# Visualização Gráfica

## Barras

### Máximos
"""

plt.figure(figsize=(10, 6))
plt.bar(df_max["Município"], df_max["Máximo"])
plt.title("VALOR MÁXIMO DOS CASOS DE DENGUE EM SANTA CATARINA")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número Máximo de Casos de dengue")
plt.show()

principais_max = df_max.head(20)
print(principais_max)
plt.figure(figsize=(10, 6))
plt.bar(principais_max["Município"], principais_max["Máximo"])
plt.title("VALOR MÁXIMO DOS CASOS DE DENGUE EM SANTA CATARINA")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número Máximo de Casos de dengue")
plt.gca().patch.set_facecolor("honeydew")
plt.show()

"""### Mínimos"""

plt.figure(figsize=(10, 6))
plt.bar(df_min["Município"], df_min["Mínimo"])
plt.title("VALOR MÍNIMO DOS CASOS DE DENGUE EM SANTA CATARINA")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número Mínimo de Casos de dengue")
plt.show()

principais_min = df_min.head(20)
print(principais_min)
plt.figure(figsize=(10, 6))
plt.bar(principais_min["Município"], principais_min["Mínimo"])
plt.title("VALOR MÍNIMO DOS CASOS DE DENGUE EM SANTA CATARINA")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número Mínimo de Casos de dengue")
plt.gca().patch.set_facecolor("honeydew")
plt.show()

"""### Acumulado

#### Ascendente
"""

plt.figure(figsize=(10, 6))
plt.bar(df_soma_asc["Município"], df_soma_asc["Soma"])
plt.title("SOMA HISTÓRICA DOS CASOS DE DENGUE EM SANTA CATARINA (Menores Registros)")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número de Casos de dengue")
plt.show()

principais_soma_asc = df_soma_asc.head(50)
print(principais_soma_asc)
plt.figure(figsize=(10, 6))
plt.bar(principais_soma_asc["Município"], principais_soma_asc["Soma"])
plt.title("SOMA HISTÓRICA DOS CASOS DE DENGUE EM SANTA CATARINA (Menores Registros)")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número de Casos de dengue")
plt.gca().patch.set_facecolor("honeydew")
plt.show()

"""#### Descendente"""

plt.figure(figsize=(10, 6))
plt.bar(df_soma["Município"], df_soma["Soma"])
plt.title("SOMA HISTÓRICA DOS CASOS DE DENGUE EM SANTA CATARINA")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número de Casos de dengue")
plt.show()

principais_soma = df_soma.head(20)
print(principais_soma)
plt.figure(figsize=(10, 6))
plt.bar(principais_soma["Município"], principais_soma["Soma"])
plt.title("SOMA HISTÓRICA DOS CASOS DE DENGUE EM SANTA CATARINA")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Número de Casos de dengue")
plt.gca().patch.set_facecolor("honeydew")
plt.show()

"""## Série Temporal"""

for municipio in municipios:
  plt.figure(figsize=(10, 6))
  plt.plot(casos["Semana"], casos[municipio])
  plt.title(f"CASOS DE DENGUE, MUNICÍPIO DE {municipio}")
  plt.xlabel("Série Histórica (Semanas Epidemiológicas)")
  plt.ylabel("Número de Casos de dengue")
  plt.show()

sem_tempo = casos.drop(columns = "Semana")
for municipio in municipios:
  plt.figure(figsize=(10, 6))
  plt.plot(casos["Semana"], casos[municipio])
  plt.title(f"CASOS DE DENGUE, MUNICÍPIO DE {municipio}")
  plt.xlabel("Série Histórica (Semanas Epidemiológicas)")
  plt.ylabel("Número de Casos de dengue")
  plt.grid(True)
  plt.gca().set_ylim(0, sem_tempo.max().max())
  plt.gca().patch.set_facecolor("honeydew")
  plt.show()

sem_tempo = casos.drop(columns = "Semana")
for municipio in principais_max["Município"]:
  plt.figure(figsize=(10, 6))
  plt.plot(casos["Semana"], casos[municipio])
  plt.title(f"CASOS DE DENGUE, MUNICÍPIO DE {municipio}")
  plt.xlabel("Série Histórica (Semanas Epidemiológicas)")
  plt.ylabel("Número de Casos de dengue")
  plt.grid(True)
  plt.gca().set_ylim(0, sem_tempo.max().max())
  plt.gca().patch.set_facecolor("honeydew")
  plt.show()

sem_tempo = casos.drop(columns = "Semana")
for municipio in principais_soma["Município"]:
  plt.figure(figsize=(10, 6))
  plt.plot(casos["Semana"], casos[municipio])
  plt.title(f"CASOS DE DENGUE, MUNICÍPIO DE {municipio}")
  plt.xlabel("Série Histórica (Semanas Epidemiológicas)")
  plt.ylabel("Número de Casos de dengue")
  plt.grid(True)
  plt.gca().set_ylim(0, sem_tempo.max().max())
  plt.gca().patch.set_facecolor("honeydew")
  plt.show()
